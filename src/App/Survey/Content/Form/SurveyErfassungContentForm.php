<?php


namespace Nemundo\Process\App\Survey\Content\Form;


use Nemundo\Core\Random\UniqueId;
use Nemundo\Package\Bootstrap\FormElement\BootstrapTextBox;
use Nemundo\Process\App\Survey\Content\Type\ErfassungContentType;
use Nemundo\Process\App\Survey\Data\Survey\Survey;
use Nemundo\Process\App\Survey\Data\Survey\SurveyReader;
use Nemundo\Process\Content\Form\AbstractContentForm;
use Nemundo\Process\Content\Parameter\DataIdParameter;
use Nemundo\Process\Content\Form\AbstractSequenceForm;
use Nemundo\Process\Content\Parameter\SequenceDataIdParameter;

class SurveyErfassungContentForm extends AbstractSequenceForm
{

    /**
     * @var BootstrapTextBox
     */
    private $firstName;

    /**
     * @var BootstrapTextBox
     */
    private $lastName;

    public function getContent()
    {

        $this->firstName=new BootstrapTextBox($this);
        $this->firstName->label='First Name';

        return parent::getContent(); // TODO: Change the autogenerated stub
    }


    protected function loadUpdateForm()
    {

        $row = (new SurveyReader())->getRowById($this->parentId);

        $this->firstName->value=$row->vorname;

    }

    protected function onSubmit()
    {
        // TODO: Implement onSubmit() method.


        $type=new ErfassungContentType();
        //$type->parentId=$this->parentId;
        $type->firstName=$this->firstName->getValue();
        $type->saveType();




        /*
if ($this->dataId == null) {
        $this->dataId = (new UniqueId())->getUniqueId();
}

        $data= new Survey();
        $data->updateOnDuplicate=true;
        $data->id=$this->dataId;  //   $dataId;
        $data->vorname = $this->firstName->getValue();
        $data->save();*/

        $this->redirectSite->addParameter(new SequenceDataIdParameter( $type->parentId));


    }

}