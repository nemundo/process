<?php


namespace Nemundo\Process\App\Podcast\Content\Feed;


use Nemundo\Process\App\Podcast\Data\Feed\Feed;
use Nemundo\Process\App\Podcast\Data\Feed\FeedCount;
use Nemundo\Process\App\Podcast\Data\Feed\FeedReader;
use Nemundo\Process\App\Podcast\Data\Feed\FeedRow;
use Nemundo\Process\Content\Type\AbstractTreeContentType;

class FeedContentType extends AbstractTreeContentType
{

    public $rssUrl;

    protected function loadContentType()
    {

        $this->typeLabel = 'FeedPodcast';
        $this->typeId = '93250a52-8f7d-4971-af46-467369ae5993';

        $this->formClass = FeedContentForm::class;
        $this->viewClass = FeedContentView::class;


    }


    protected function onCreate()
    {

        $data = new Feed();
        $data->ignoreIfExists=true;
        $data->rssUrl = $this->rssUrl;
        $this->dataId = $data->save();

    }


    protected function onDataRow()
    {

        $this->dataRow = (new FeedReader())->getRowById($this->dataId);

    }


    public function existItem()
    {

        $value = false;

        $count =new FeedCount();
        $count->filter->andEqual($count->model->rssUrl,$this->rssUrl);
        if ($count->getCount() ===0) {
            $value = true;
        }

        return $value;

        return parent::existItem(); // TODO: Change the autogenerated stub
    }


    /**
     * @return \Nemundo\Model\Row\AbstractModelDataRow|FeedRow
     */
    public function getDataRow()
    {
        return parent::getDataRow(); // TODO: Change the autogenerated stub
    }

}