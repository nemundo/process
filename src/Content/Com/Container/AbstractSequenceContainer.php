<?php


namespace Nemundo\Process\Content\Com\Container;


use Nemundo\Admin\Com\Button\AdminSiteButton;
use Nemundo\Admin\Com\Title\AdminSubtitle;
use Nemundo\Com\FormBuilder\RedirectTrait;
use Nemundo\Core\Random\UniqueId;
use Nemundo\Html\Container\AbstractHtmlContainer;
use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;
use Nemundo\Process\Content\Com\Menu\NextMenu;
use Nemundo\Process\Content\Parameter\ContentTypeParameter;
use Nemundo\Process\Content\Parameter\DataIdParameter;
use Nemundo\Process\Content\Parameter\SequenceContentTypeParameter;
use Nemundo\Process\Content\Parameter\SequenceDataIdParameter;
use Nemundo\Process\Content\Type\AbstractMenuContentType;
use Nemundo\Process\Content\Type\AbstractSequenceContentType;

abstract class AbstractSequenceContainer extends AbstractHtmlContainer
{

    use RedirectTrait;

    /**
     * @var AbstractSequenceContentType
     */
    public $contentType;

    public function getContent()
    {

        $layout = new BootstrapTwoColumnLayout($this);
        $layout->col1->columnWidth= 4;
        $layout->col2->columnWidth= 8;

        $currentContentType=null;

        $contentTypeParameter = new SequenceContentTypeParameter();
        if ($contentTypeParameter->exists()) {
            $currentContentType = $contentTypeParameter->getContentType();
        } else {
            $currentContentType =$this->contentType->startContentType;
        }

        $dataId=null;
        $sequenceDataIdParameter = new SequenceDataIdParameter();
        if ($sequenceDataIdParameter->exists()) {
            $dataId=$sequenceDataIdParameter->getValue();
        } else {
            //$dataId = (new UniqueId())->getUniqueId();
        }





        $menu= new NextMenu($layout->col1);
        $menu->contentType=$this->contentType->startContentType;
        $menu->currentContentType=$currentContentType;

        $subtitle=new AdminSubtitle($layout->col2);
        $subtitle->content=$currentContentType->type;

        $form = $currentContentType->getForm($layout->col2);
        $form->redirectSite=$this->redirectSite;
        $form->redirectSite->addParameter(new SequenceDataIdParameter());
        $form->appendParameter = true;
        $form->dataId = $dataId;
$form->parentId=$dataId;


        $nextMenu = $currentContentType->getNextMenu();

       // $form->redirectSite = TestSite::$site;
        if ($nextMenu !== null) {
            $form->redirectSite->addParameter(new SequenceContentTypeParameter($nextMenu->contentId));
            //$form->redirectSite->addParameter(new DataIdParameter());

        }


        $previsousMenu = $currentContentType->getPreviousMenu();
        if ($previsousMenu !== null) {
            $previous = new AdminSiteButton($layout->col2);
            $previous->site = clone($this->redirectSite);
            $previous->site->title = 'Previous';
            $previous->site->addParameter(new DataIdParameter());
            $previous->site->addParameter(new SequenceContentTypeParameter($previsousMenu->contentId));
        }




        return parent::getContent(); // TODO: Change the autogenerated stub
    }

}