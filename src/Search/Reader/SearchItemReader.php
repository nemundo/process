<?php


namespace Nemundo\Process\Search\Reader;


use Nemundo\Core\Base\DataSource\AbstractDataSource;
use Nemundo\Core\Text\KeywordList;
use Nemundo\Core\Text\SnippetText;
use Nemundo\Core\Text\TextBold;
use Nemundo\Db\Filter\Filter;
use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;
use Nemundo\Process\Config\ProcessConfig;
use Nemundo\Process\Content\Parameter\ContentParameter;
use Nemundo\Process\Content\Parameter\ContentTypeParameter;
use Nemundo\Process\Search\Data\SearchIndex\SearchIndexCount;
use Nemundo\Process\Search\Data\SearchIndex\SearchIndexPaginationReader;
use Nemundo\Process\Search\Parameter\SearchQueryParameter;
use Nemundo\Process\Search\Site\SearchItemSite;

class SearchItemReader extends AbstractDataSource  // SearchIndexPaginationReader
{



    public $query;


    public function getTotalSearchResultCount() {

    }


    protected function loadData()
    {


        $searchIndexReader = new SearchIndexPaginationReader();

        $searchIndexReader->model->loadContent();
        $searchIndexReader->model->content->loadContentType();

        //$searchIndexReader->filter->andEqual($searchIndexReader->model->wordId, $queryParameter->getWordId());


        $keywordFilter=new Filter();

        $keyowrdList=new KeywordList();
        $keyowrdList->addInputText=false;
        foreach ( $keyowrdList->getHashList($this->query) as $value ) {
            $keywordFilter->orEqual($searchIndexReader->model->wordId, $value);
        }

        $searchIndexReader->filter->andFilter($keywordFilter);

        /*
        $contentTypeParameter = new ContentTypeParameter();
        if ($contentTypeParameter->hasValue()) {
            $searchIndexReader->filter->andEqual($searchIndexReader->model->content->contentTypeId, $contentTypeParameter->getValue());
        }*/


        $bold = new TextBold();
        $bold->addSearchQuery((new SearchQueryParameter())->getValue());  //$form->getSearchQuery());



        $searchIndexReader->addGroup($searchIndexReader->model->contentId);
        $searchIndexReader->paginationLimit = ProcessConfig::PAGINATION_LIMIT;


        foreach ($searchIndexReader->getData() as $indexRow) {

            $searchItem=new SearchItem();

            $contentType = $indexRow->content->getContentType();
            $searchItem->title = $bold->getBoldText($contentType->getSubject());
            $row->addText($indexRow->content->contentType->contentType);

            $snippet = new SnippetText();
            $textSnippet = $snippet->getSnippet($queryParameter->getValue(), $contentType->getText());
            $row->addText($bold->getBoldText($textSnippet));

            if ($contentType->hasViewSite()) {
                $site = $contentType->getViewSite();
                $row->addClickableSite($site);
            } else {
                $site = clone(SearchItemSite::$site);
                $site->addParameter(new ContentParameter($indexRow->contentId));
                $row->addClickableSite($site);
            }



        $count = new SearchIndexCount();
        $count->filter->andFilter($keywordFilter);

        //$count->filter->andEqual($searchIndexReader->model->wordId, $queryParameter->getWordId());


        //$searchCount = $count->getCount();

        //return parent::getData(); // TODO: Change the autogenerated stub
    }


    /*
     *  $searchIndexReader->model->loadContent();
            $searchIndexReader->model->content->loadContentType();

     */

}