<?php


namespace Nemundo\Process\Template\Content\ImageList;


use Nemundo\Com\Html\Listing\UnorderedList;
use Nemundo\Package\Bootstrap\Carousel\BootstrapImageCarousel;
use Nemundo\Package\Bootstrap\Image\BootstrapResponsiveImage;
use Nemundo\Process\Content\View\AbstractContentView;
use Nemundo\Process\Template\Data\TemplateMultiFile\TemplateMultiFileReader;
use Nemundo\Process\Template\Data\TemplateMultiImage\TemplateMultiImageReader;

class ImageListContentView extends AbstractContentView
{

    /**
     * @var ImageListContentType
     */
    public $contentType;

    public function getContent()
    {

        //$list=new UnorderedList($this);

        $carousel = new BootstrapImageCarousel($this);
        $carousel->slideEffect = false;

        /*$reader =new TemplateMultiFileReader();  // new MultiImageAnforderungReader();
        $reader->filter->andEqual($reader->model->dataId, $this->dataId);
        $reader->filter->andEqual($reader->model->status, true);*/

        $reader = new TemplateMultiImageReader();
        $reader->filter->andEqual($reader->model->dataContentId, $this->contentType->getContentId());  //getLastContentId());
        $reader->filter->andEqual($reader->model->active, true);


        foreach ($reader->getData() as $row) {
            $carousel->addImage($row->image->getImageUrl($reader->model->imageAutoSize400));
            //$list->addText($row->image->getFilename());
            //$list->addText($row->image->getImageUrl($reader->model->imageAutoSize400));

            //$img = new BootstrapResponsiveImage($list);
            //$img->src= $row->image->getImageUrl($reader->model->imageAutoSize400);

        }

        return parent::getContent(); // TODO: Change the autogenerated stub
    }

}