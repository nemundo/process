<?php


namespace Nemundo\Process\Template\Content\Comment;


use Nemundo\Core\Language\LanguageCode;
use Nemundo\Process\App\Document\Data\Document\Document;
use Nemundo\Process\App\Document\Type\DocumentIndexTrait;
use Nemundo\Process\Template\Content\LargeText\AbstractLargeTextContentType;


class CommentContentType extends AbstractLargeTextContentType
{

    use DocumentIndexTrait;

    public $comment;


    protected function loadContentType()
    {

        $this->typeLabel[LanguageCode::EN] = 'Comment';
        $this->typeLabel[LanguageCode::DE] = 'Kommentar';
        $this->typeId = '63fa85d4-4c49-42cc-bd0d-af00a7d96458';

        $this->formClass = CommentForm::class;
        $this->viewClass = CommentView::class;


    }


    protected function onCreate()
    {

        $this->largeText=$this->comment;
        parent::onCreate();

    }



    protected function onSearchIndex()
    {

        $row = $this->getDataRow();
        $this->addSearchText($row->largeText);

        $this->saveDocumentIndex($row->largeText);

        /*
        $data = new Document();
        $data->sourceId = $this->getParentId();
        $data->contentId=$this->getContentId();
        $data->title= $this->getSubject();
        $data->text = $row->largeText;
        $data->save();*/

    }


    public function hasView()
    {
        return true;
    }

    public function getViewSite()
    {

        $parentContentType = $this->getParentContentType();
        return $parentContentType->getViewSite();

    }



    /*
    public function getSubject()
    {

        //$this->parentId

        /*$contentReader=new ContentReader();
        $contentReader->model->loadContentType();
        $contentRow = $contentReader->getRowById($this->parentId);*/

    /*    $subject = 'comment:'.$this->parentId;
        return $subject;

        //return parent::getSubject(); // TODO: Change the autogenerated stub
    }*/

}