<?php


namespace Nemundo\Process\Template\Content\MultiImage;


use Nemundo\Package\Bootstrap\FormElement\BootstrapFileUpload;
use Nemundo\Process\Content\Form\AbstractContentForm;
use Nemundo\Process\Template\Content\Image\AbstractImageContentForm;

abstract class AbstractMultiImageContentForm extends AbstractImageContentForm  // AbstractContentForm
{

    /**
     * @var BootstrapFileUpload
     */
    //protected $file;

    protected function loadContainer()
    {
        parent::loadContainer(); // TODO: Change the autogenerated stub

        $this->file->multiUpload = true;

        /*
        $this->file = new BootstrapFileUpload($this);
        $this->file->label = 'File';
        $this->file->multiUpload = true;
*/

        /*
        $reader = new TemplateMultiFileReader();
        //$reader->filter->andEqual($reader->model->dataContentId, $this->contentType->getContentId());

        //$list = new UnorderedList($this);
        //$list->addCssClass('list-unstyled');

        $table = new AdminTable($this);

        $header=new TableHeader($table);
        $header->addText('Filename');
        $header->addEmpty();

        foreach ($reader->getData() as $fileRow) {

            $row = new TableRow($table);

            $link = new UrlHyperlink($row);
            $link->url = $fileRow->file->getUrl();
            $link->content = $fileRow->file->getFilename();
        }*/


    }


    protected function onSubmit()
    {

        $this->contentType->parentId = $this->parentId;
        $this->contentType->saveType();

        foreach ($this->file->getMultiFileRequest() as $fileRequest) {
            $this->contentType->addFileRequest($fileRequest);
        }


    }

}